services:
  database:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql

    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 30s
      retries: 15
      start_period: 60s

  backend:
    build: ./Backend
    container_name: backend
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_NAME_TEST: ${DB_NAME_TEST}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - ./Backend/.env
    networks:
      - app-network
    restart: unless-stopped
    command: sh -c "while ! nc -z database 3306; do echo 'Waiting for MySQL...'; sleep 1; done; npm run dev"

  frontend:
    build: ./Frontend
    container_name: frontend
    environment:
      VITE_API_URL: /api/
    depends_on:
      backend:
        condition: service_started
    networks: 
      - app-network
    restart: unless-stopped

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge